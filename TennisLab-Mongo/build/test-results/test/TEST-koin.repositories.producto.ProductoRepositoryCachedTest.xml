<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="koin.repositories.producto.ProductoRepositoryCachedTest" tests="8" skipped="0" failures="0" errors="0" timestamp="2023-02-05T16:17:52" hostname="LOLI-LAPTOP" time="0.134">
  <properties/>
  <testcase name="delete()" classname="koin.repositories.producto.ProductoRepositoryCachedTest" time="0.032"/>
  <testcase name="findAll()" classname="koin.repositories.producto.ProductoRepositoryCachedTest" time="0.017"/>
  <testcase name="findById()" classname="koin.repositories.producto.ProductoRepositoryCachedTest" time="0.016"/>
  <testcase name="decreaseStock()" classname="koin.repositories.producto.ProductoRepositoryCachedTest" time="0.012"/>
  <testcase name="findByUUID()" classname="koin.repositories.producto.ProductoRepositoryCachedTest" time="0.015"/>
  <testcase name="save()" classname="koin.repositories.producto.ProductoRepositoryCachedTest" time="0.013"/>
  <testcase name="findByUUIDNotExists()" classname="koin.repositories.producto.ProductoRepositoryCachedTest" time="0.012"/>
  <testcase name="findByIdNotExists()" classname="koin.repositories.producto.ProductoRepositoryCachedTest" time="0.012"/>
  <system-out><![CDATA[17:17:52.827 [Test worker] DEBUG koin.services.cache.producto.ProductoCache - Initializing ProductoCache...
17:17:52.830 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating spyk for ProductoCache name=cache#695
17:17:52.878 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for ProductoRepository name=repo#696
17:17:52.946 [DefaultDispatcher-worker-3 @coroutine#788] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering 60000 on ProductoCache(cache#695).getRefreshTime()
17:17:52.958 [Test worker @coroutine#789] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for Producto name=child of repo#696#697
17:17:52.963 [Test worker @coroutine#789] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for Producto name=child of repo#696#698
17:17:52.965 [DefaultDispatcher-worker-3] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering Producto(id=63dfd6b01070f8213392c223, uuid=93a98d69-6da6-48a7-b34f-05b596ea83aa, tipo=FUNDAS, marca=MarcaZ, modelo=ModeloZ, precio=36.4, stock=1) on ProductoRepository(repo#696).delete(63dfd6b01070f8213392c223, continuation {})
17:17:52.969 [DefaultDispatcher-worker-3] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering io.github.reactivecircus.cache4k.RealCache@2392aa40 on ProductoCache(cache#695).getCache()
17:17:52.980 [Test worker @coroutine#797] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for Flow name=child of repo#696#699
17:17:52.982 [DefaultDispatcher-worker-3] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$2@7c500287 on ProductoRepository(repo#696).findAll(continuation {})
17:17:52.999 [Test worker @coroutine#803] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for Producto name=child of repo#696#700
17:17:53.004 [DefaultDispatcher-worker-3] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering Producto(id=63dfd6b01070f8213392c223, uuid=93a98d69-6da6-48a7-b34f-05b596ea83aa, tipo=FUNDAS, marca=MarcaZ, modelo=ModeloZ, precio=36.4, stock=1) on ProductoRepository(repo#696).findById(63dfd6b01070f8213392c223, continuation {})
17:17:53.014 [Test worker @coroutine#809] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for Producto name=child of repo#696#701
17:17:53.016 [DefaultDispatcher-worker-3] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering Producto(id=63dfd6b01070f8213392c223, uuid=93a98d69-6da6-48a7-b34f-05b596ea83aa, tipo=FUNDAS, marca=MarcaZ, modelo=ModeloZ, precio=36.4, stock=1) on ProductoRepository(repo#696).decreaseStock(63dfd6b01070f8213392c223, continuation {})
17:17:53.029 [Test worker @coroutine#815] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for Producto name=child of repo#696#702
17:17:53.030 [DefaultDispatcher-worker-3] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering io.github.reactivecircus.cache4k.RealCache@2392aa40 on ProductoCache(cache#695).getCache()
17:17:53.031 [DefaultDispatcher-worker-3] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering Producto(id=63dfd6b01070f8213392c223, uuid=93a98d69-6da6-48a7-b34f-05b596ea83aa, tipo=FUNDAS, marca=MarcaZ, modelo=ModeloZ, precio=36.4, stock=1) on ProductoRepository(repo#696).findByUUID(93a98d69-6da6-48a7-b34f-05b596ea83aa, continuation {})
17:17:53.037 [Test worker @background work runner#818] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for Producto name=child of repo#696#703
17:17:53.044 [Test worker @coroutine#821] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for Producto name=child of repo#696#704
17:17:53.046 [DefaultDispatcher-worker-3] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering Producto(id=63dfd6b01070f8213392c223, uuid=93a98d69-6da6-48a7-b34f-05b596ea83aa, tipo=FUNDAS, marca=MarcaZ, modelo=ModeloZ, precio=36.4, stock=1) on ProductoRepository(repo#696).save(Producto(id=63dfd6b01070f8213392c223, uuid=93a98d69-6da6-48a7-b34f-05b596ea83aa, tipo=FUNDAS, marca=MarcaZ, modelo=ModeloZ, precio=36.4, stock=1), continuation {})
17:17:53.062 [DefaultDispatcher-worker-3] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering io.github.reactivecircus.cache4k.RealCache@2392aa40 on ProductoCache(cache#695).getCache()
17:17:53.063 [DefaultDispatcher-worker-3] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering null on ProductoRepository(repo#696).findByUUID(820f968b-3895-4c6c-af36-4d5dd5cc170f, continuation {})
17:17:53.075 [DefaultDispatcher-worker-3] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering null on ProductoRepository(repo#696).findById(63dfd6b11070f8213392c224, continuation {})
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
